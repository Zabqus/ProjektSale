services:
  postgres:
    image: postgres:15-alpine
    container_name: projektsale-postgres
    environment:
      POSTGRES_DB: projektsale_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - projektsale-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: projektsale-app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/projektsale_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_FLYWAY_URL: jdbc:postgresql://postgres:5432/projektsale_db
      SPRING_FLYWAY_USER: postgres
      SPRING_FLYWAY_PASSWORD: postgres
    ports:
      - "8080:8080"
    networks:
      - projektsale-network
    volumes:
      - app_logs:/app/logs
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  app_logs:
    driver: local

networks:
  projektsale-network:
    driver: bridge